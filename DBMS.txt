DBMS MYSQL5.6



CREATE TABLE users
(user_id int PRIMARY KEY, user_name varchar(100), user_email varchar(100));

CREATE TABLE playlists
(playlist_id int PRIMARY KEY, user_id int, playlist_name varchar(100), createdOn date, description varchar(100),CONSTRAINT fk_users FOREIGN KEY (user_id) REFERENCES users(user_id));

CREATE TABLE artists(artist_id int PRIMARY KEY, artist_name varchar(100));

CREATE TABLE Tracks 
(track_id int PRIMARY KEY, track_name varchar(100), artist_id int, duration int,CONSTRAINT fk_artists FOREIGN KEY (artist_id) REFERENCES artists(artist_id));

CREATE TABLE Playlist_Track (playlist_id int, track_id int,CONSTRAINT fk_playlists FOREIGN KEY (playlist_id) REFERENCES playlists(playlist_id),CONSTRAINT fk_Tracks FOREIGN KEY (track_id) REFERENCES Tracks(track_id));


INSERT INTO users
(user_id, user_name, user_email) VALUES
(121,'Carliel','carli@hotmail.com'),
(122,'Arya','arya@hotmail.com'),
(123,'Ryan','ryan@hotmail.com'),
(124,'Michael','mack@hotmail.com'),
(125,'Simon','mack@hotmail.com'); 

INSERT INTO playlists
(playlist_id, user_id , playlist_name, createdOn, description) VALUES
(323, 121,'Play1m','2014-02-12','OldSongs'),
(324, 122,'Play2m','2014-10-21','NewSongs'),
(325, 123,'Play3m','2014-05-10','LatestSongs'),
(326, 124,'Play4m','2014-12-28','Top10Songs'); 

INSERT INTO artists
(artist_id, artist_name) VALUES
(24,'Keaton'),
(25,'Kylie'),
(26,'Mennon'),
(27,'Michael'); 

INSERT INTO Tracks
(track_id, track_name, artist_id, duration) VALUES
(20,'Willie',24,2),
(21,'Punk',25,3),
(22,'Rock',26,1),
(19,'Classic',26,3),
(18,'Salsa',26,2),
(23,'Jazz',27,4);  

INSERT INTO Playlist_Track(playlist_id, track_id) VALUES
(323,20),
(324,21),
(325,22),
(326,23); 



Queries
SELECT * FROM users;
SELECT * FROM playlists;
SELECT * FROM artists;
SELECT * FROM Tracks;
SELECT * FROM Playlist_Track;
 
 
1. SELECT COUNT(user_id) FROM users;
2. SELECT playlist_name FROM playlists ORDER BY createdOn DESC LIMIT 1; 
3. SELECT COUNT(track_id) FROM Playlist_Track GROUP BY playlist_id;
4. SELECT * FROM playlists JOIN users on playlists.user_id=users.user_id WHERE user_name='Ryan';
5. Unable to solve 
6. SELECT track_name,MAX(duration) AS longestSong  FROM Tracks;
7. SELECT users.user_name FROM users WHERE user_id NOT IN (SELECT user_id FROM playlists);
8. SELECT * FROM playlists WHERE playlist_id = (SELECT playlist_id FROM Playlist_Track WHERE track_id IS NULL OR track_id = '');

